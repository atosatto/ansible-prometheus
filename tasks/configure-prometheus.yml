---

- name: Create the Prometheus TSDB directory
  file:
    name: "{{ prometheus_tsdb_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755

- name: Create the Prometheus configuration directory
  file:
    name: "{{ prometheus_config_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755

- name: Define the Prometheus configuration validation command
  set_fact:
    _prometheus_promtool_check_config_cmd: |-
      {% if prometheus_release_tag == 'latest' or prometheus_release_tag | regex_replace('^v(.*)$', '\\1') is version_compare('2.0.0', '>=') %}
      {{ prometheus_bin_path }}/promtool check config %s
      {% else %}
      {{ prometheus_bin_path }}/promtool check-config %s
      {% endif %}

- name: Create the Prometheus configuration file
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_path }}/{{ prometheus_config_file }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0640
    validate: "{{ _prometheus_promtool_check_config_cmd }}"
  notify: reload prometheus

- name: Create the Systemd Unit file for the Prometheus service
  template:
    src: prometheus.systemd.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0640
  notify: reload systemd and restart prometheus
  when: ansible_service_mgr == "systemd"

- name: Create the Upstart Unit file for the Prometheus service
  template:
    src: prometheus.upstart.j2
    dest: /etc/init/prometheus.conf
    owner: root
    group: root
    mode: 0640
  notify: restart prometheus
  when: ansible_service_mgr == "upstart"

- name: Create the generic start-stop script for the Prometheus service
  template:
    src: prometheus.service.j2
    dest: /etc/init.d/prometheus
    owner: root
    group: root
    mode: 0750
  notify: restart prometheus
  when: ansible_service_mgr not in [ "systemd", "upstart" ]
